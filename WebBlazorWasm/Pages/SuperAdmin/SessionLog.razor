@page "/superadmin/accesslog"
@inherits SuperAdminLayout
@layout SuperAdminLayout

@inject IJSRuntime JSRuntime
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IMembershipGatewayManager _memberservices
@inject IAppSettings _settings
@inject NavigationManager NavigationManager
@inject HttpClient _httpclient

<BreadCrumbView IsHome="false" HomeURL="/superadmin/home" PageTitle="Log de Acesso" ></BreadCrumbView>

   <div id="kt_content_container" class="d-flex flex-column-fluid align-items-start container-xxl">
        <div class="content flex-row-fluid" id="kt_content">        
            <div class="">  
                @if (view != null)
                {

                     <div style="display:@view.SearchingState">

                        <div class="row gy-5 g-xl-10">

                            <div class="col-xl-4">                                
                                <div class="card card-flush h-xl-100">								      
								    <div class="card-header pt-7">
									  
									    <h3 class="card-title align-items-start flex-column">
										    <span class="card-label fw-bold text-dark">Pesquisar</span>										
									    </h3>									        
									       
                                    </div>
                                           
                                    <div class="card-body">
							             	
                                        <div class="form-group">
                                            <label class="form-label">E-mail do Usuário:</label>
                                            <input type="email" @bind-value="view.param.pEmail" class="form-control field"
                                                   placeholder="Pesquisar por e-mail">
                                        </div>                              
                                 
                                        <div class="form-group">
                                             <label class="form-label" for="name">Pesquisar por Intervalo de Data:</label>
                                              <Switch TValue="bool" @bind-Checked="@view.param.SearchByDate"></Switch>
                                    
                                        </div>
                                  
                                        @if (view.param.SearchByDate)
                                        {
                                            <div class="form-group">
                                        
                                                <span>Data início:</span>
                                                <DateEdit TValue="DateTime" @bind-Date="@view.param.pDate_Start" />
                                                <br/>
                                                <span>Data fim:</span>
                                                <DateEdit TValue="DateTime" @bind-Date="@view.param.pData_End" />                                        

                                            </div>
                                        }                                                     

                                        <p class="field" style="padding-top:10px">

                                            <TaskButton @ref="searchbtn" OnClick="OnSearch" Title="Pesquisar"
                                                Description="Clique aqui buscar." ReadOnly=!view.Permissions.AllowRead
                                                      ActionLabel="Pesquisando...">
                                            </TaskButton>

                                        </p>                                            

                                    </div>
							   </div>
                             </div>
                                                            
                            <div class="col-xl-8">

                                <div class="card card-flush h-xl-100">
										
									<div class="card-header pt-7">
											
										<h3 class="card-title align-items-start flex-column">
											<span class="card-label fw-bold text-dark">Resultado da Busca</span>												
										</h3>
                                    </div>

                                    <div class="card-body">
                                            
                                            @if (view.searchresult != null)
                                            {
                                                @if (view.searchresult.Count > 0)
                                                {
                                                      <DataGrid TItem="SessionLogResult" Data="@view.searchresult"  Responsive  ShowPager PageSize=10>                                                                                         
                                             
                                                            <DataGridColumns>
                                            
                                                                <DataGridColumn Field="@nameof(SessionLogResult.Date)" Caption="Data do Acesso" />
                                                                <DataGridColumn Field="@nameof(SessionLogResult.Email)" Caption="E-mail" />
                                                                <DataGridColumn Field="@nameof(SessionLogResult.UserName)" Caption="UserName" />                                              
                                                                <DataGridColumn Field="@nameof(SessionLogResult.IP)" Caption="IP" />   
                                                                                                                                           
                                                             </DataGridColumns>
                                      
                                                       </DataGrid>
                                    
                                                }
                                                else
                                                {
                                                    <p> Nenhum registro encontrado </p>
                                                }
                                            }
                                         
                                    </div>

                                </div>
                                                                  

                            </div>

                           
                        </div>

                    </div>   
                
                }
                else
                {
                    <h5>Carregando a página. Aguarde...</h5>

                }

             </div>
        </div>
   </div>

<MessageBox @ref="msgbox"></MessageBox>

<TaskLoading @ref="loading" Title="Carregando dados. Aguarde..."></TaskLoading>

@code {


    private MessageBox msgbox;  
    private TaskLoading loading;
    private TaskButton searchbtn;
     
    //

    private UserAuthenticated LoggedUser;
    private SessionViewModel view; 

    //

    private async Task InitResources()
    {
      
        ((TemplateAppController)_appctrl).Settings = _settings;

        if (await _appctrl.IsAuthenticated())
        {
            LoggedUser = _appctrl.UserInfo;
            _memberservices.Init(_httpclient,_settings.ServiceURL,LoggedUser.Token);            
            view = new SessionViewModel((_memberservices as MembershipGateway) ,LoggedUser); 

            List<UserPermissions> list = await _appctrl.GetUserPermissions();
            view.Permissions
                = BaseViewModel.SetPermissions(list, "SYSSESSION", false);
        }

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            await InitResources();
            await view.InitializeModels();           

            StateHasChanged();
        }
    }

    public async Task OnSearch()
    {
        searchbtn.Begin(); 
        await view.Search();

        if (!view.ExecutionStatus.Status)
        {
           await msgbox.ShowDialog("Erro ao efetuar pesquisa", view.ExecutionStatus.Error.Message);
        }

        searchbtn.End();
    }

    public void OnNew()
    {

        view.InitNew(); 
        StateHasChanged();
    }

    public async Task OnGet(object id)
    {
        await loading.Begin() ;

        await view.Get(id);

        await loading.End();

        if (!view.ExecutionStatus.Status)
        {
           await  msgbox.ShowDialog("Erro ao retornar os dados", view.ExecutionStatus.Error.Message);
        }
        else
        {
            view.InitEdit(); 

        }

        StateHasChanged();
    }

   

    public async Task OnDetClick(object args)
    {        
        await OnGet(args);

    }

    public void Back()
    {
        view.BackToSearch(); 
        StateHasChanged();

    }

    public void GoHome()
    {
        string url = _appctrl.UserInfo.HomeURL;
        NavigationManager.NavigateTo(url);

    }


    //public string GetImageUrl(string filename)
    //{
    //    string ret = "";

    //    ret = ((TemplateAppController)_appctrl).GetProfileImageURL(filename);

    //    return ret;
    //}


}