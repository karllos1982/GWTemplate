@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IAuthGatewayManager _appservices
@inject IAppSettingsManager<TemplateSettings>  _settings
@inject NavigationManager NavigationManager
@inject HttpClient _httpclient

<PageTitle>Super Admin</PageTitle>

    <div class="d-flex flex-column flex-root">        
        <div class="page d-flex flex-row flex-column-fluid">            
            <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">                
                <div id="kt_header" class="header" data-kt-sticky="true" data-kt-sticky-name="header" data-kt-sticky-offset="{default: '200px', lg: '300px'}">                    
                    <div class="header-top d-flex align-items-stretch flex-grow-1">                        
                        <div class="d-flex container-xxl align-items-stretch">                            
                            <div class="d-flex align-items-center align-items-lg-stretch me-5 flex-row-fluid">                                
                                        
                                <MasterMobileButton OnClick="OpenMenu">

                                </MasterMobileButton>

                                <a href="/home" class="d-flex align-items-center">
                                    <img alt="Logo" src="https://preview.keenthemes.com/metronic8/demo20/assets/media/logos/demo20.svg" class="h-25px h-lg-30px" />
                                </a>
                              
                                    <MenuLink RoleName="SuperAdmin" @ref="menu"
                                        Display="MenuLink.MENUDISPLAYENUM.TABLINK" > 
                                    </MenuLink>
                                                                
                            </div>
                              
                            @if(islogged )
                            {
                                <UserView 
                                    Service=@GetService()
                                    User=@user                                  
                                    OnLogout="Logout" Islogged=@islogged>
                                </UserView>    
                            }
                        

                        </div>
                       
                    </div>
                  
                        <MenuLink RoleName="SuperAdmin" 
                            Display="MenuLink.MENUDISPLAYENUM.TABITEMS" > 
                        </MenuLink>
                   
                </div>
                             
               @Body

              <MasterFooter></MasterFooter>
            
                
            </div>
           
        </div>
        
    </div>


@code{

    private bool islogged = false;
    private UserAuthenticated user ; 
    private MenuLink menu;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            this.InitResources();
            string url = _settings.Settings.SiteURL;

            islogged = await _appctrl.IsAuthenticated();

            if (islogged)
            {
                await _appctrl.GetSession();

                user = _appctrl.UserInfo;

                if (user.RoleName != "SuperAdmin" && user.RoleName != "Administrador")                    
                {
                    NavigationManager.NavigateTo(url + "/login");
                }               
                _appservices.Init(_httpclient,_settings.Settings.ServiceURL, _appctrl.UserInfo.Token);

                StateHasChanged();
            }
            else
            {

                NavigationManager.NavigateTo(url + "/login");
            }

        }

    }

    private void InitResources()
    {
        _settings.LoadSettings(_httpclient);
        ((TemplateAppController)_appctrl).Settings = _settings.Settings;

    }

    private async Task Logout()
    {

        if (_appctrl.UserInfo != null)
        {
            await ((AuthGateway)_appservices).Logout();
        }

        await _appctrl.Logout();
        string url = _settings.Settings.SiteURL;
        NavigationManager.NavigateTo(url);
        islogged = false;
        StateHasChanged();
    }

    private AuthGateway GetService()
    {

        return (AuthGateway)_appservices;
    }

    private async Task OpenMenu()
    {
        await menu.OpenMobileMenu();

    }

}