@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IAuthGatewayManager _appservices
@inject IAppSettings _settings
@inject NavigationManager NavigationManager
@inject HttpClient _httpclient

<PageTitle>Template</PageTitle>

     <div class="d-flex flex-column flex-root">        
        <div class="page d-flex flex-row flex-column-fluid">            
            <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">                
                <div id="kt_header" class="header" data-kt-sticky="true" data-kt-sticky-name="header" data-kt-sticky-offset="{default: '200px', lg: '300px'}">                    
                    <div class="header-top d-flex align-items-stretch flex-grow-1">                        
                        <div class="d-flex container-xxl align-items-stretch">                            
                            <div class="d-flex align-items-center align-items-lg-stretch me-5 flex-row-fluid">                                
                                <button class="d-lg-none btn btn-icon btn-color-white bg-hover-white bg-hover-opacity-10 w-35px h-35px h-md-40px w-md-40px ms-n2 me-2" id="kt_header_navs_toggle">                                    
                                    <span class="svg-icon svg-icon-2">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M21 7H3C2.4 7 2 6.6 2 6V4C2 3.4 2.4 3 3 3H21C21.6 3 22 3.4 22 4V6C22 6.6 21.6 7 21 7Z" fill="currentColor" />
                                            <path opacity="0.3" d="M21 14H3C2.4 14 2 13.6 2 13V11C2 10.4 2.4 10 3 10H21C21.6 10 22 10.4 22 11V13C22 13.6 21.6 14 21 14ZM22 20V18C22 17.4 21.6 17 21 17H3C2.4 17 2 17.4 2 18V20C2 20.6 2.4 21 3 21H21C21.6 21 22 20.6 22 20Z" fill="currentColor" />
                                        </svg>
                                    </span>                                
                                </button>                               
                                <a href="/home" class="d-flex align-items-center">
                                    <img alt="Logo" src="https://preview.keenthemes.com/metronic8/demo20/assets/media/logos/demo20.svg" class="h-25px h-lg-30px" />
                                </a>
                              
                                    <MenuLink RoleName="SuperAdmin" Display="MenuLink.MENUDISPLAYENUM.TABLINK" > </MenuLink>
                                                                
                            </div>
                              
                            @if(islogged )
                            {
                                <UserView 
                                    UserName="@user.UserName" 
                                    Email="@user.Email" 
                                    ImageURL="@user.ProfileImageURL" 
                                    OnLogout="Logout">
                                </UserView>    
                            }
                        

                        </div>
                       
                    </div>
                  
                        <MenuLink RoleName="SuperAdmin" Display="MenuLink.MENUDISPLAYENUM.TABITEMS" > </MenuLink>
                   
                </div>
                             
               @Body

              
                <div class="footer py-4 d-flex flex-lg-column" id="kt_footer">
                    
                    <div class="container-xxl d-flex flex-column flex-md-row align-items-center justify-content-between">
                       
                        <div class="text-dark order-2 order-md-1">
                            <span class="text-muted fw-semibold me-1">2022&copy;</span>
                            <a href="#" target="_blank" class="text-gray-800 text-hover-primary">GW Framework</a>
                        </div>
                      
                        <ul style="display:none" class="menu menu-gray-600 menu-hover-primary fw-semibold order-1">
                            <li class="menu-item">
                                <a href="#" target="_blank" class="menu-link px-2">Sobre</a>
                            </li>
                            <li class="menu-item">
                                <a href="#" target="_blank" class="menu-link px-2">Support</a>
                            </li>
                            <li class="menu-item">
                                <a href="#" target="_blank" class="menu-link px-2">Purchase</a>
                            </li>
                        </ul>
                     
                    </div>
                    
                </div>
                
            </div>
           
        </div>
        
    </div>


@code{

    private bool islogged = false;
    private UserAuthenticated user ; 

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            this.InitResources();
            string url = _settings.SiteURL;

            islogged = await _appctrl.IsAuthenticated();

            if (islogged)
            {
                await _appctrl.GetSession();

                user = _appctrl.UserInfo;

                if (user.RoleName != "SuperAdmin")                    
                {
                    NavigationManager.NavigateTo(url + "/login");
                }               

                StateHasChanged();
            }
            else
            {

                NavigationManager.NavigateTo(url + "/login");
            }

        }

    }

    private void InitResources()
    {        
        ((TemplateAppController)_appctrl).Settings = _settings;

    }

    private async Task Logout()
    {

        if (_appctrl.UserInfo != null)
        {
            await ((AuthGateway)_appservices).Logout();
        }

         await _appctrl.Logout();
        string url = _settings.SiteURL;
        NavigationManager.NavigateTo(url);
        islogged = false;
        StateHasChanged();
    }
 


}